#version 330 core

layout(location = 0) in vec3 model_space_pos;
layout(location = 1) in vec3 vertex_color;
layout(location = 2) in vec2 vertexUV;

out vec2 UV;
smooth out vec3 fragColor;

// model view projection matrix...
uniform mat4 MVP;

uniform float waveTime;
uniform float waveWidth;
uniform float waveHeight;
vec3 v;

void main() {
	v = model_space_pos;

	v.y = sin(waveWidth * v.x + waveTime) * cos(waveWidth * v.z + waveTime) * waveHeight;

	//gl_Position = MVP * vec4(model_space_pos, 1);
	gl_Position = MVP * vec4(v, 1);
	
	//fragColor = vertex_color;

	// UV of the vertex. No special space for this one.
	UV = vertexUV + vec2(waveTime*0.03, waveTime*0.03);
}