#version 330 core

in vec2 UV;
uniform sampler2D myTextureSampler;

out vec4 color;
smooth in vec3 fragColor;

void main() {
	

	// Normal of the computed fragment, in camera space
	vec3 n = normalize( Normal_cameraspace );

	// Direction of the light (from the fragment to the light)
	vec3 l = normalize( LightDirection_cameraspace );

	float cosTheta = clamp( dot( n,l ), 0,1 );

	vec4 LightColor = vec4(1.0, 1.0, 1.0, 1.0);

	color = (texture2D( myTextureSampler, UV ).rgba) * LightColor * LightPower * cosTheta / (distance*distance);

}
