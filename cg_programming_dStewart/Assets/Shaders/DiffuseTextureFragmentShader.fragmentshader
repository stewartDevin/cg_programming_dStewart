#version 330 core

in vec2 UV;
uniform sampler2D myTextureSampler;

out vec4 color;
smooth in vec3 fragColor;

uniform float timer;
uniform vec3 lightDirection;

// model view projection matrix...
uniform mat4 MVP;
uniform mat4 MV;

in vec3 normal;

/////////////////////////////////////////
// main function
void main() {

	float intensity;
	vec4 _color;

	intensity = dot(lightDirection, normal);

	if (intensity > 0.95)
		_color = vec4(1.0,0.5,0.5,1.0);
	else if (intensity > 0.5)
		_color = vec4(0.6,0.3,0.3,1.0);
	else if (intensity > 0.25)
		_color = vec4(0.4,0.2,0.2,1.0);
	else
		_color = vec4(0.2,0.1,0.1,1.0);

	//color = vec3(1, 1, 1);

	// get the color from the texture
	//color = texture2D( myTextureSampler, UV ).rgba;
	
	color = clamp(clamp(intensity, 0.3f, 1.0f) * texture2D( myTextureSampler, UV ).rgba, 0.0f, 1.0f);
	color.a = 1.0f;
	//color = _color;
}
